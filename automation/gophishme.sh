#!/bin/bash

if [ -z $1 ] ; then
    echo Usage: $(which bash) gophish.sh domain [domain]..
    echo Where domain is the domain-name pointing to the current box, minimum of one domain, optionally multiple!
    exit
fi

# General configgery
sudo apt update
sudo apt install golang-1.9-go letsencrypt -y

# Setup go 
mkdir ~/go
echo "export PATH=$PATH:/usr/lib/go-1.9/bin" >> ~/.bashrc
export PATH=$PATH:/usr/lib/go-1.9/bin
echo "export GOPATH=~/go" >> ~/.bashrc
export GOPATH=~/go
source ~/.bashrc

# get gophish and get good config
go get github.com/gophish/gophish
cp ~/go/src/github.com/gophish/gophish/config.json ~/go/src/github.com/gophish/gophish/config.json_backup
echo '
{
	"admin_server" : {
		"listen_url" : "127.0.0.1:3333",
		"use_tls" : true,
		"cert_path" : "gophish_admin.crt",
		"key_path" : "gophish_admin.key"
	},
	"phish_server" : {
		"listen_url" : "0.0.0.0:443",
		"use_tls" : true,
		"cert_path" : "cert.pem",
		"key_path": "privkey.pem"
	},
	"db_name" : "sqlite3",
	"db_path" : "gophish.db",
	"migrations_prefix" : "db/db_"
}
 ' > ~/go/src/github.com/gophish/gophish/config.json

#Get certs for all domains specified
DOMAINZ=$(echo $@ | sed -e "s/\ /\ -d\ /g")
letsencrypt certonly --standalone --register-unsafely-without-email --agree-tos -d $DOMAINZ
ln -s /etc/letsencrypt/live/$1/cert.pem $GOPATH/src/github.com/gophish/gophish/cert.pem
ln -s /etc/letsencrypt/live/$1/privkey.pem $GOPATH/src/github.com/gophish/gophish/privkey.pem

cd $GOPATH/src/github.com/gophish/gophish
go build

